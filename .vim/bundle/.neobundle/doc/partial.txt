*partial.txt*   easily extract partials from your code


                     ___           _   _       _
                    / _ \__ _ _ __| |_(_) __ _| |
                   / /_)/ _` | '__| __| |/ _` | |
                  / ___/ (_| | |  | |_| | (_| | |
                  \/    \__,_|_|   \__|_|\__,_|_|

            Makes creating partials in your code a breeze!

==============================================================================
CONTENTS                                                     *Partial-contents*

    1. Usage ................................... |PartialUsage|
    2. Configurations .......................... |PartialConfig|
        2.1 Default Mapping .................... |PartialConfig_mapping|
        2.2 loaded_partial ..................... |PartialConfig_debug|
        2.3 partial_templates .................. |PartialConfig_templates|
        2.4 partial_templates_roots ...........  |PartialConfig_templates_root|
        2.5 partial_keep_position .............. |PartialConfig_keep_position|
        2.6 partial_use_splits ................. |PartialConfig_use_splits|
        2.7 partial_vertical_split ............. |PartialConfig_vertical_split|
        2.8 partial_create_dirs ................ |PartialConfig_create_dirs|
    3. Implementation details................... |PartialModes|
    4. Contributing ............................ |PartialContributing|
    5. Bugs .................................... |PartialContributing|
    6. Credits ................................. |PartialCredits|
    7. Changelog ............................... |PartialChangelog|
    9. License ................................. |PartialLicense|


==============================================================================
1. Usage                                                         *PartialUsage*

Partial plugin is a tool developed to help you break down your code into
partials. Simply select some lines on Visual mode, hit <leader>x, enter the
desired partial location and the plugin will place the appropiate replacement.

==============================================================================
2. Configuration                                                *PartialConfig*

You can tweak the behavior of Partial by setting a few variables in your
vimrc file. For example: >

------------------------------------------------------------------------------
2.1 Default Mapping                                     *PartialConfig_mapping*

The default mapping to extract a partial is <leader>x.
You can easy map it to other keys. For example:

    vmap <Leader>P :PartialExtract<cr>

------------------------------------------------------------------------------
2.2 g:loaded_partial                                     *PartialConfig_loaded*

Partial is loaded only once. Set this to 1 to force Partial to reload every
time its file is sourced.

------------------------------------------------------------------------------
2.3 g:partial_templates                               *PartialConfig_templates*

Common file extensions are supported (Markup: .dust, .erb, .haml, .slim -
Stylesheet: .css, .less, .sass, .scss) and you can widen this list by
declaring a dictionary like so:

    let g:partial_templates = {
          \   'ejs': '<% include %s %>',
          \   'hbs': '{{> %s }}'
          \ }

------------------------------------------------------------------------------
2.4 g:partial_templates_roots                    *PartialConfig_templates_root*

Partial works with a list of usual roots for keeping your templates.
If you happen to use an uncommon root folder you can extend this list
like so:

    let s:partial_templates_roots = [
          \ 'stylus',
          \ 'tmpls'
          \ ]

------------------------------------------------------------------------------
2.5 g:partial_keep_position                       *PartialConfig_keep_position*

Cursor stays on the same position after replacement. Set this to 0 if you want
to continue with the edition of the partial file.

------------------------------------------------------------------------------
2.6 g:partial_use_splits                             *PartialConfig_use_splits*

New windows for partials are closed after being created. Set
this to 1 if you want to keep the partial in a new window.

------------------------------------------------------------------------------
2.7 g:partial_vertical_split                     *PartialConfig_vertical_split*

Partial uses horizontal splits. Set this to 1 if you prefer vertical splits.

------------------------------------------------------------------------------
2.8 g:partial_create_dirs                           *PartialConfig_create_dirs*

Partial creates directories as required. Set this to 0 if you don't want
Partial to create new directories.

==============================================================================
3. Implementation details                                        *PartialModes*

After triggering :PartialExtract the editor will:

    * throw an error if the file type is not supported
      (you may want to expand this list!)
    * suggest a folder with the same name as the file you are working in
      (without extensions)
    * throw an error if the file exists (you can overcome this error
      by triggering :PartialExtract!)
    * ensure the file has the proper extension(s) and create intermediate
      directories as required
    * set partial path relative to the templates folder and dispose any
      preceding underscores on the partial name
    * save the partial content getting rid of unneeded leading spaces and tabs
    * make the replacement

Partial tries to set `suffixesadd` and `includeexpr` on
`BufEnter` to navigate to partials under the cursor with `gf`.

==============================================================================
4. Bugs                                                           *PartialBugs*

Please report any bugs you may find on the GitHub issue tracker:

    http://github.com/jbgutierrez/partial.vim/issues

==============================================================================
5. Contributing                                           *PartialContributing*

Think you can make Partial better? Great!, contributions are always welcome.

Fork the project on GitHub and send a pull request.

    GitHub:    http://github.com/jbgutierrez/partial.vim

==============================================================================
6. Changelog                                                 *PartialChangelog*

v0.1.0
    * First working version

==============================================================================
7. Credits                                                     *PartialCredits*

I've borrow the core idea from the following two plugins:

    * https://github.com/tpope/vim-rails - highly recommended
    * https://github.com/wesf90/rails-partial - sublime users

==============================================================================
8. License                                                     *PartialLicense*

Partial is licensed under the MIT license.
See http://opensource.org/licenses/MIT

==============================================================================


vim:ts=4:et:ft=help:
