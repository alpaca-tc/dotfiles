# basic#{{{
snippet     augroup
abbr        augroup ... augroup END
alias       aug
options     word
  augroup ${1:Name}
    ${2}
  augroup END

snippet     for
abbr        for value in array
options     word
  for ${1:value} in ${2:array}
    ${3}
  endfor

snippet     ford
abbr        for [key, value] in items(array)
options     word
  for [${1:key}, ${2:value}] in items(${3:array})
    ${4}
  endfor
#}}}

# for plugins#{{{
snippet     exists?
abbr        if exists('...') | let ... | endif
options     word
  if !exists('${1:valiable}')
    let $1 = ${2}
  endif

snippet     loaded
abbr        loaded
options     word
  if exists('g:${1:variable}') ${2:|| (v:version < 700)}
    finish
  endif
  let g:$1 = 1

  let s:save_cpo = &cpo
  set cpo&vim

  let &cpo = s:save_cpo
  unlet s:save_cpo

snippet     mit
  "=============================================================================
  " FILE: ${1:file_name}
  " AUTHOR: `g:my.info.author` <`g:my.info.email`>
  " Last Modified: `alpaca#function#today()`
  " License: MIT license  {{{
  "     Permission is hereby granted, free of charge, to any person obtaining
  "     a copy of this software and associated documentation files (the
  "     "Software"), to deal in the Software without restriction, including
  "     without limitation the rights to use, copy, modify, merge, publish,
  "     distribute, sublicense, and/or sell copies of the Software, and to
  "     permit persons to whom the Software is furnished to do so, subject to
  "     the following conditions:
  "
  "     The above copyright notice and this permission notice shall be included
  "     in all copies or substantial portions of the Software.
  "
  "     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
  "     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
  "     MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.
  "     IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY
  "     CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,
  "     TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
  "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  " }}}
  "=============================================================================
#}}}

# for .vimrc#{{{
snippet     neol
  NeoBundle ${1}, {
  \ 'depends' : [],
  \ 'build' : {
  \   'unix' : '',
  \   'mac'  : '',
  \ },
  \ 'autoload': {
  \   'mappings' : [],
  \   'commands' : [],
  \   ''
  \ }
  \ }

snippet     neo
    NeoBundle '${1}'

snippet   neobundle#get
  let bundle = neobundle#get('${1}')
  function! bundle.hooks.on_source(bundle)
    ${2}
  endfunction
#}}}
