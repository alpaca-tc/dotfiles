# 基礎
# js
snippet     js
    JSON.stringify(${1})

snippet     jp
    JSON.parse(${1})

snippet     con
    constructor : (${1})->
      ${2}

# coffee
snippet     debug
    console.debug ${1}

snippet     log
    console.log ${1}

snippet     warn
    console.warn ${1}

# jquery
snippet     ajax
    $.ajax({
      url: ${1:http://..}
      async: ${2:true/false}
      dataType: ${3:'json' }
    })

snippet     getj
    $.ajaxSetup { cache: false, async:${1} } # IE hack
    _json = $.getJSON(
      "${2:https://graph.facebook.com/#{ id }}",
      (data, status)->
        ${3}
      'jsonp'
    )

snippet     ready
    $(document).ready ->
      ${1}

snippet     ex
    extends ${1}

###
# 便利な関数
###
snippet ffillBlank
    _fillBlank = (target, length, word="0")->
      strArray = []
      strArray.push(word) for num in [ 0..length - target.length ]
      strArray.push(target)
      strArray.join()

snippet fextend
    extend = (obj, mixin) ->
      obj[name] method for name, method of mixin
      obj


snippet finclude
    extend = (obj, mixin) ->
      obj[name] method for name, method of mixin
      obj

    include = (klass, mixin) ->
      extend klass.prototype.mixin

snippet cModule
    class Module
      MODULE_KEYWORDS = ['extended', 'included']
      @extend: (obj) ->
        for key, value of obj when key not in MODULE_KEYWORDS
          @[key] = value

        obj.extended?.apply(@)
        @

      # ${1:indent修正}
      @include: (obj) ->
        for key, value of obj when key not in MODULE_KEYWORDS
          # Assign properties to tye prototype
          @::[key] = value

        obj.included?.apply(@)
        @

snippet ftype
    type = do ->
      classToType = {}
      for name in "Boolean Number String Function Array Date RegExp Undefined Null".split(" ")
        classToType["[object " + name + "]"] = name.toLowerCase()

      (obj) ->
        strType = Object::toString.call(obj)
        classToType[strType] or "object"

snippet  strict
    'use strict'

snippet  req
    ${1} = require '${2}'

snippet  cMixin
    class Mixin
      include: (t) ->
        (t[n] = m unless n == 'augment' or !this[n].prototype?) for n, m of this
