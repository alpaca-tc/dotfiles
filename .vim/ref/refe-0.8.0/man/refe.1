.TH refe 1 "April 2003"
.SH NAME
.PP
refe - Ruby reference manual referer
.SH SYNOPSIS
.PP
.BI "refe [-als] [-d " dir "] [[-r] " class " | " method "] [\-e " function "] [\-C " function "] [\-c " method "]"
.SH DESCRIPTIONS
.PP
ReFe lookups reference manual entry and print it.
One of the class name, method name, function name is allowd.

.SH Class/Method Name Expressions (\-r/\-c)

.TP
.B
class
Produces the list of all methods of the
.I class
.TP
.B
class#method | class, method | class method | method
Produces method description.

.SH Function Name Expressions (\-e/\-C)

.TP
.fi
.B
_w
Expanded to "rb_".  e.g. _eval \-> rb_eval
.TP
.fi
.B
w_w_w
Expanded to word_word_word.
e.g. r_e_s_w \-> rb_eval_string_wrap
.TP
.fi
.B
w w w
Expanded to word_word_word.
e.g. r e s w \-> rb_eval_string_wrap
.SH OPTIONS
.TP
.fi
.B \-r
Lookup method document from method name.
.TP
.fi
.B \-c
Lookup function from method name.
.TP
.fi
.B \-e
Lookup function document from function name.
.TP
.fi
.B \-C
Lookup function from function name.
.TP
.fi
.B \-a, \-\-all
Print all description of classes/methods.
.TP
.fi
.B \-s, \-\-short
Print only names.
.TP
.fi
.B \-l, \-\-line
Print one name per one line.
.TP
.fi
.BI "\-d " dir ", \-\-databasedir=" dir
Use
.I dir
as the database root directory.
.TP
.fi
.B \-\-version
Print command version and quit.
.TP
.fi
.B \-\-copyright
Print copyright and quit.
.TP
.fi
.B \-h, \-\-help
Print help message and quit.

.SH EXAMPLES 1 - Lookup Class Reference Manual Entry

% refe s gsub    #=> String#gsub

% refe 'i#see'   #=> IO#seek

% refe s,ind     #=> String#index

% refe each_w    #=> Enum#each_with_index

.SH EXAMPLES 2 - Lookup Extention API Reference Manual Entry

% refe -e data wrap    #=> Data_Wrap_Struct()

% refe -e _str dup     #=> rb_str_dup()

.SH EXAMPLES 3 - Lookup Function Source

% refe -C r e s w      #=> rb_eval_sring_wrap()

% refe -C _str strip   #=> rb_str_strip()

% refe -c Array join   #=> rb_array_join_m()

.SH "SEE ALSO"
ruby(1), rd2(1)

.SH COPYRIGHT
Copyright (C) 2001-2003 Minero Aoki
