--- OptionParser#switch
    Creates OptionParser::Switch.
    :Parameters:
      : *opts
        option definition:
        : argument style
          see OptionParser::ArgumentStyle
        : argument pattern
          acceptable option argument format, must pre-defined with
          OptionParser.accept or OptionParser#accept, or
          Regexp. This can appear once or assigned as String
          if not present, otherwise causes exception ArgumentError.
          
          cf. Acceptable argument classes.
        : Hash
        : Array
          possible argument values.
        : Proc
        : Method
          alternative way to give the ((*handler*)).
        : "--switch=MANDATORY", "--switch[=OPTIONAL]", "--switch"
          specifies long style switch that takes ((*mandatory*)),
          ((*optional*)) and ((*no*)) argument, respectively.
        : "-xMANDATORY", "-x[OPTIONAL]", "-x"
          specifies short style switch that takes ((*mandatory*)),
          ((*optional*)) and ((*no*)) argument, respectively.
        : "-[a-z]MANDATORY", "-[a-z][OPTIONAL]", "-[a-z]"
          special form short style switch that matches character
          range(not fullset of regular expression).
        : "=MANDATORY", "=[OPTIONAL]"
          argument style and description.
        : "description", ...
          ((*description*)) for this option.
      : Block
        ((*handler*)) to convert option argument to arbitrary Class.

