--- include(module ... )

    指定されたモジュールの性質(メソッドや定数、クラス変数)を追加します。
    self を返します。
    include は多重継承の代わりに用いられる Mix-in を実現するため
    に使われます。

        class C
          include FileTest
          include Math
        end

        p C.ancestors

        # => [C, Math, FileTest, Object, Kernel]

    モジュールの機能追加は、クラスの継承関係の間にそのモジュールが挿入
    されることで実現されています。従って、メソッドの探索などはスーパー
    クラスに優先されて追加したモジュールから探索されます(上の例の
    ancestors の結果がメソッド探索の順序です)。

    同じモジュールを二回以上 include すると二回目以降は無視されます。

        module Foo;                    end
        class  Bar;       include Foo; end
        class  Baz < Bar; include Foo; end  # <- この include は無効

        p Baz.ancestors  # => [Baz, Bar, Foo, Object, Kernel]


    モジュールの継承関係が循環してしまうような include を行うと、例外
    ArgumentError が発生します。

        module Foo; end
        module Bar; include Foo; end
        module Foo; include Bar; end

        => -:3:in `append_features': cyclic include detected (ArgumentError)
                from -:3:in `include'
                from -:3

    ruby 1.7 feature: 引数に複数のモジュールを指定した場合、最後
    の引数から逆順に include を行います。

