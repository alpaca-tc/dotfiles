--- Hash[key,value,...]
--- Hash[hash]

    新しいハッシュを生成します。一番目の形式では、引数は必ず偶数個指定
    しなければなりません。(奇数番目がキー、偶数番目が値)。

    二番目の形式(1つのハッシュオブジェクトを引数に指定した場合)は、指
    定したハッシュと同一のキーと値を持つ新たなハッシュを生成して返しま
    す。(生成されたハッシュのデフォルト値は nil です。)

    以下は配列からハッシュを生成する方法の例です(より直接的な方法があ
    るのではと思うかも知れませんが残念ながらありません)。

    (1) [キー, 値, ...] の配列からハッシュへ

            ary = [1,"a", 2,"b", 3,"c"]
            p Hash[*ary]

            # => {1=>"a", 2=>"b", 3=>"c"}

    (2) キーと値のペアの配列からハッシュへ

            alist = [[1,"a"], [2,"b"], [3,"c"]]
            p Hash[*alist.flatten]

            #=> {1=>"a", 2=>"b", 3=>"c"}

    (3) キーと値の配列のペアからハッシュへ(version 1.7 以降)

            keys = [1, 2, 3]
            vals = ["a", "b", "c"]
            alist = keys.zip(vals)   # あるいは alist = [keys,vals].transpose
            p Hash[*alist.flatten]

            #=> {1=>"a", 2=>"b", 3=>"c"}

    (4) キーや値が配列だと (2) や (3) の方法は使えないので地道に代入するしかない

            h = Hash.new
            alist = [[1,["a"]], [2,["b"]], [3,["c"]]]
            alist.each {|k,v|
              h[k] = v
            }
            p h

            #=> {1=>["a"], 2=>["b"], 3=>["c"]}

