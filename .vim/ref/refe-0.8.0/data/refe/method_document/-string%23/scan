--- scan(re)
--- scan(re) {|s| ... }

    self に対して正規表現 re で繰り返しマッチを行い、マッ
    チした部分文字列の配列を返します。

        p "foobar".scan(/./)
        # => ["f", "o", "o", "b", "a", "r"]

        p "foobarbazfoobarbaz".scan(/ba./)
        # => ["bar", "baz", "bar", "baz"]

    正規表現が括弧を含む場合は、括弧で括られたパターンにマッチした部分
    文字列の配列の配列を返します。

        p "foobar".scan(/(.)/)
        # => [["f"], ["o"], ["o"], ["b"], ["a"], ["r"]]

        p "foobarbazfoobarbaz".scan(/(ba)(.)/)
        # => [["ba", "r"], ["ba", "z"], ["ba", "r"], ["ba", "z"]]

    ブロックを指定して呼び出した場合は、マッチした部分文字列(括弧を含
    む場合は括弧で括られたパターンにマッチした文字列の配列)をブロック
    のパラメータとします。ブロックを指定した場合は self を返しま
    す。

        "foobarbazfoobarbaz".scan(/ba./) {|s| p s}
        # => "bar"
             "baz"
             "bar"
             "baz"

        "foobarbazfoobarbaz".scan(/(ba)(.)/) {|s| p s}
        # => ["ba", "r"]
             ["ba", "z"]
             ["ba", "r"]
             ["ba", "z"]

    ruby 1.7 feature: 1.6 以前は、re が文字列の場合、その
    文字列を正規表現にコンパイルしていました。1.7 以降は、その文字列そ
    のものがパターンになります。

