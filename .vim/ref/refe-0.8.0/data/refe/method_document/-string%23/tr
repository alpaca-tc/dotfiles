--- tr(search, replace)
--- tr!(search, replace)

    文字列の中に search 文字列に含まれる文字が存在したら、
    それを replace 文字列の対応する文字に置き換えます。

    search の形式は tr(1) [manual page] と同じです。つまり、
    `a-c' は a から c を意味し、"^0-9" のように
    文字列の先頭が `^' の場合は指定文字以外が置換の対象になります。

    replace に対しても `-' による範囲指定が可能です。
    例えば、String#upcase [String/upcase] を tr で書くと、

        p "foo".tr('a-z', 'A-Z')
        => "FOO"

    となります。

    `-' は文字列の両端にない場合にだけ範囲指定の意味になります。
    同様に、`^' もその効果は文字列の先頭にあるときだけです。また、
    `-', `^', `\' はバックスラッシュ(`\')によ
    りエスケープすることができます。

    replace の範囲が search の範囲よりも小さい場合は、
    replace の最後の文字が無限に続くものとして扱われます。

    tr は置換後の文字列を生成して返します。
    tr! は self を変更して返しますが、置換が起こら
    なかった場合は nil を返します。

