レシーバを持たないメソッドオブジェクトのクラスです。
Module#instance_method [Module/instance_method] や 
Method#unbind [Method/unbind] により生成し、後で
UnboundMethod#bind [UnboundMethod/bind] によりレシーバを
割り当てた Method オブジェクトを作ることができます。

例: Method クラスの冒頭にある例を UnboundMethod で書くと以下のようになる

        class Foo
          def foo() "foo" end
          def bar() "bar" end
          def baz() "baz" end
        end

        # 任意のキーとメソッドの関係をハッシュに保持しておく
        # レシーバの情報がここにはないことに注意
        methods = {1 => Foo.instance_method(:foo),
                   2 => Foo.instance_method(:bar),
                   3 => Foo.instance_method(:baz)}

        # キーを使って関連するメソッドを呼び出す
        # レシーバは任意(Foo クラスのインスタンスでなければならない)
        p methods[1].bind(Foo.new).call      # => "foo"
        p methods[2].bind(Foo.new).call      # => "bar"
        p methods[3].bind(Foo.new).call      # => "baz"

例: メソッドの再定義を UnboundMethod を使って行う方法(普通は、
alias や super を使う)

    class Foo
      def foo
        p :foo
      end
      @@orig_foo = instance_method :foo
      def foo
        p :bar
        @@orig_foo.bind(self).call
      end
    end

    Foo.new.foo

    => :bar
       :foo