.new	REXML::Parent.new
#<<	REXML::Parent#<<
#==	Object#==
#===	Object#===
#=~	Object#=~
#[]	REXML::Parent#[]
#[]=	REXML::Parent#[]=
#__id__	Object#__id__
#__send__	Object#__send__
#_dump	Object#_dump
#add	REXML::Parent#<<
#bytes	REXML::Child#bytes
#children	REXML::Parent#children
#class	Object#class
#clone	Object#clone
#dclone	Object#dclone
#deep_clone	REXML::Parent#deep_clone
#delete	REXML::Parent#delete
#delete_at	REXML::Parent#delete_at
#delete_if	REXML::Parent#delete_if
#display	Object#display
#document	REXML::Child#document
#dup	Object#clone
#each	REXML::Parent#each
#each_child	REXML::Parent#each
#each_index	REXML::Parent#each_index
#enum_for	Object#enum_for
#eql?	Object#eql?
#equal?	Object#equal?
#extend	Object#extend
#freeze	Object#freeze
#frozen?	Object#frozen?
#hash	Object#hash
#id	Object#__id__
#index	REXML::Parent#index
#initialize	Object#initialize
#initialize_copy	Object#initialize_copy
#insert_after	REXML::Parent#insert_after
#insert_before	REXML::Parent#insert_before
#inspect	Object#inspect
#instance_eval	Object#instance_eval
#instance_exec	Object#instance_exec
#instance_of?	Object#instance_of?
#instance_variable_defined?	Object#instance_variable_defined?
#instance_variable_get	Object#instance_variable_get
#instance_variable_set	Object#instance_variable_set
#instance_variables	Object#instance_variables
#is_a?	Object#is_a?
#kind_of?	Object#is_a?
#length	REXML::Parent#length
#marshal_dump	Object#marshal_dump
#marshal_load	Object#marshal_load
#method	Object#method
#method_missing	Object#method_missing
#methods	Object#methods
#next_sibling	REXML::Child#next_sibling
#next_sibling=	REXML::Child#next_sibling=
#nil?	Object#nil?
#object_id	Object#__id__
#parent	REXML::Child#parent
#parent=	REXML::Child#parent=
#parent?	REXML::Parent#parent?
#pretty_inspect	Object#pretty_inspect
#pretty_print	Object#pretty_print
#pretty_print_cycle	Object#pretty_print_cycle
#pretty_print_inspect	Object#pretty_print_inspect
#pretty_print_instance_variables	Object#pretty_print_instance_variables
#previous_sibling	REXML::Child#previous_sibling
#previous_sibling=	REXML::Child#previous_sibling=
#private_methods	Object#private_methods
#protected_methods	Object#protected_methods
#public_methods	Object#public_methods
#push	REXML::Parent#<<
#remove	REXML::Child#remove
#remove_instance_variable	Object#remove_instance_variable
#replace_child	REXML::Parent#replace_child
#replace_with	REXML::Child#replace_with
#respond_to?	Object#respond_to?
#send	Object#__send__
#singleton_method_added	Object#singleton_method_added
#singleton_method_removed	Object#singleton_method_removed
#singleton_method_undefined	Object#singleton_method_undefined
#singleton_methods	Object#singleton_methods
#size	REXML::Parent#length
#taint	Object#taint
#tainted?	Object#tainted?
#tap	Object#tap
#to_a	REXML::Parent#children
#to_ary	Object#to_ary
#to_enum	Object#enum_for
#to_hash	Object#to_hash
#to_int	Object#to_int
#to_io	Object#to_io
#to_proc	Object#to_proc
#to_regexp	Object#to_regexp
#to_s	Object#to_s
#to_str	Object#to_str
#to_yaml	Object#to_yaml
#to_yaml_properties	Object#to_yaml_properties
#to_yaml_style	Object#to_yaml_style
#type	Object#class
#unshift	REXML::Parent#unshift
#untaint	Object#untaint
