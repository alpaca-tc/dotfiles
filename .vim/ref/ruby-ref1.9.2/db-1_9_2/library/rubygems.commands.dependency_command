methods=
sublibraries=
requires=rubygems.remote_fetcher,rubygems.spec_fetcher,rubygems.specification,rubygems.requirement,rubygems.builder,rubygems.exceptions,rubygems.local_remote_options,rubygems.source_index,rubygems.source_info_cache_entry,rubygems.version_option,rubygems.digest.sha2,rubygems.defaults.operating_system,rubygems.gem_path_searcher,rubygems.platform,rubygems.defaults,rubygems.source_info_cache,rubygems.dependency,rubygems,rubygems.user_interaction,rubygems.command,rubygems.version
classes=Gem=Commands=DependencyCommand
is_sublibrary=true

インストールされている Gem パッケージの依存関係を表示するためのライブラリです。

  Usage: gem dependency GEMNAME [options]
    Options:
      -v, --version VERSION            指定したバージョンの依存関係を表示します
          --platform PLATFORM          指定したプラットフォームの依存関係を表示します
      -R, --[no-]reverse-dependencies  この Gem を使用している Gem を表示します
      -p, --pipe                       Pipe Format (name --version ver)
    Local/Remote Options:
      -l, --local                      操作をローカルに限定します
      -r, --remote                     操作をリモートに限定します
      -b, --both                       ローカルとリモートの両方の操作を許可します
      -B, --bulk-threshold COUNT       Threshold for switching to bulk
                                       synchronization (default 1000)
          --source URL                 Gem パッケージのリモートリポジトリの URL を指定します
          --[no-]http-proxy [URL]      リモートの操作に HTTP プロクシを使用します
      -u, --[no-]update-sources        ローカルソースキャッシュを更新します
    Common Options:
      -h, --help                       このコマンドのヘルプを表示します
      -V, --[no-]verbose               表示を詳細にします
      -q, --quiet                      静かに実行します
          --config-file FILE           指定された設定ファイルを使用します
          --backtrace                  バックトレースを表示します
          --debug                      Ruby 自体のデバッグオプションを有効にします
    Arguments:
      GEMNAME       依存関係を表示する Gem の名前を指定します
    Summary:
      インストールされている Gem の依存関係を表示します
    Defaults:
      --local --version '>= 0' --no-reverse-dependencies
