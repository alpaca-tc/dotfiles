.[]	Hash.[]
.new	REXML::Attributes.new
.try_convert	Hash.try_convert
#!	BasicObject#!
#!=	BasicObject#!=
#<<	REXML::Attributes#<<
#==	Hash#==
#===	Hash#==
#=~	Object#=~
#[]	REXML::Attributes#[]
#[]=	REXML::Attributes#[]=
#__id__	Object#__id__
#__send__	Object#__send__
#_dump	Object#_dump
#add	REXML::Attributes#<<
#all?	Enumerable#all?
#any?	Enumerable#any?
#assoc	Hash#assoc
#chunk	Enumerable#chunk
#class	Object#class
#clear	Hash#clear
#clone	Hash#clone
#collect	Enumerable#collect
#collect_concat	Enumerable#collect_concat
#compare_by_identity	Hash#compare_by_identity
#compare_by_identity?	Hash#compare_by_identity?
#count	Enumerable#count
#cycle	Enumerable#cycle
#dclone	Object#dclone
#default	Hash#default
#default=	Hash#default=
#default_proc	Hash#default_proc
#delete	REXML::Attributes#delete
#delete_all	REXML::Attributes#delete_all
#delete_if	Hash#delete_if
#detect	Enumerable#detect
#display	Object#display
#drop	Enumerable#drop
#drop_while	Enumerable#drop_while
#dup	Hash#clone
#each	REXML::Attributes#each
#each_attribute	REXML::Attributes#each_attribute
#each_cons	Enumerable#each_cons
#each_entry	Enumerable#each_entry
#each_key	Hash#each_key
#each_pair	Hash#each
#each_slice	Enumerable#each_slice
#each_value	Hash#each_value
#each_with_index	Enumerable#each_with_index
#each_with_object	Enumerable#each_with_object
#empty?	Hash#empty?
#entries	Enumerable#entries
#enum_for	Object#enum_for
#eql?	Hash#==
#equal?	Hash#equal?
#extend	Object#extend
#fetch	Hash#fetch
#find	Enumerable#detect
#find_all	Enumerable#find_all
#find_index	Enumerable#find_index
#first	Enumerable#first
#flat_map	Enumerable#collect_concat
#flatten	Hash#flatten
#freeze	Object#freeze
#frozen?	Object#frozen?
#get_attribute	REXML::Attributes#get_attribute
#get_attribute_ns	REXML::Attributes#get_attribute_ns
#grep	Enumerable#grep
#group_by	Enumerable#group_by
#has_key?	Hash#has_key?
#has_value?	Hash#has_value?
#hash	Hash#hash
#include?	Enumerable#include?
#index	Hash#index
#initialize	Object#initialize
#initialize_copy	Object#initialize_copy
#inject	Enumerable#inject
#inspect	Hash#inspect
#instance_eval	Object#instance_eval
#instance_exec	Object#instance_exec
#instance_of?	Object#instance_of?
#instance_variable_defined?	Object#instance_variable_defined?
#instance_variable_get	Object#instance_variable_get
#instance_variable_set	Object#instance_variable_set
#instance_variables	Object#instance_variables
#invert	Hash#invert
#is_a?	Object#is_a?
#keep_if	Hash#keep_if
#key	Hash#index
#key?	Hash#has_key?
#keys	Hash#keys
#kind_of?	Object#is_a?
#length	REXML::Attributes#length
#map	Enumerable#collect
#marshal_dump	Object#marshal_dump
#marshal_load	Object#marshal_load
#max	Enumerable#max
#max_by	Enumerable#max_by
#member?	Enumerable#include?
#merge	Hash#merge
#merge!	Hash#merge
#method	Object#method
#method_missing	Object#method_missing
#methods	Object#methods
#min	Enumerable#min
#min_by	Enumerable#min_by
#minmax	Enumerable#minmax
#minmax_by	Enumerable#minmax_by
#must_be	Object#must_be
#must_be_close_to	Object#must_be_close_to
#must_be_empty	Object#must_be_empty
#must_be_instance_of	Object#must_be_instance_of
#must_be_kind_of	Object#must_be_kind_of
#must_be_nil	Object#must_be_nil
#must_be_same_as	Object#must_be_same_as
#must_be_within_delta	Object#must_be_close_to
#must_be_within_epsilon	Object#must_be_within_epsilon
#must_equal	Object#must_equal
#must_include	Object#must_include
#must_match	Object#must_match
#must_raise	Object#must_raise
#must_respond_to	Object#must_respond_to
#must_send	Object#must_send
#must_throw	Object#must_throw
#namespaces	REXML::Attributes#namespaces
#nil?	Object#nil?
#none?	Enumerable#none?
#object_id	Object#__id__
#one?	Enumerable#one?
#partition	Enumerable#partition
#prefixes	REXML::Attributes#prefixes
#pretty_inspect	Object#pretty_inspect
#pretty_print	Object#pretty_print
#pretty_print_cycle	Object#pretty_print_cycle
#pretty_print_inspect	Object#pretty_print_inspect
#pretty_print_instance_variables	Object#pretty_print_instance_variables
#private_methods	Object#private_methods
#protected_methods	Object#protected_methods
#public_methods	Object#public_methods
#rassoc	Hash#rassoc
#reduce	Enumerable#inject
#rehash	Hash#rehash
#reject	Enumerable#reject
#reject!	Hash#delete_if
#remove_instance_variable	Object#remove_instance_variable
#replace	Hash#replace
#respond_to?	Object#respond_to?
#respond_to_missing?	Object#respond_to_missing?
#reverse_each	Enumerable#reverse_each
#select	Enumerable#find_all
#select!	Hash#keep_if
#send	Object#__send__
#shift	Hash#shift
#singleton_class	Object#singleton_class
#singleton_method_added	Object#singleton_method_added
#singleton_method_removed	Object#singleton_method_removed
#singleton_method_undefined	Object#singleton_method_undefined
#singleton_methods	Object#singleton_methods
#size	REXML::Attributes#length
#slice_before	Enumerable#slice_before
#sort	Enumerable#sort
#sort_by	Enumerable#sort_by
#store	Hash#[]=
#taint	Object#taint
#tainted?	Object#tainted?
#take	Enumerable#take
#take_while	Enumerable#take_while
#tap	Object#tap
#to_a	REXML::Attributes#to_a
#to_ary	Object#to_ary
#to_enum	Object#enum_for
#to_hash	Hash#to_hash
#to_int	Object#to_int
#to_io	Object#to_io
#to_proc	Object#to_proc
#to_regexp	Object#to_regexp
#to_s	Hash#inspect
#to_set	Enumerable#to_set
#to_str	Object#to_str
#to_yaml	Object#to_yaml
#to_yaml_properties	Object#to_yaml_properties
#to_yaml_style	Object#to_yaml_style
#trust	Object#trust
#untaint	Object#untaint
#untrust	Object#untrust
#untrusted?	Object#untrusted?
#update	Hash#update
#value?	Hash#has_value?
#values	Hash#values
#values_at	Hash#values_at
#zip	Enumerable#zip
