kind=defined
names=new
visibility=public

--- new(config = {}, default = WEBrick::Config::General) -> WEBrick::GenericServer

GenericServer オブジェクトを生成して返します。

@param config サーバの設定を保存したハッシュを指定します。有効なキーと
              値は以下のとおりです。

: :ServerName
  サーバのホスト名を表す文字列を指定します。デフォルトの Utils.getservername は /etc/hostname
  に書かれている文字列です。
: :BindAddress
  サーバのアドレスを指定します。デフォルトの nil や "0.0.0.0", "::" などを指定した
  場合は使用可能なすべてのネットワークインターフェースに対して listen を開始します。
  [[ref:lib:socket#host_format]] を参照して下さい。
: :Port
  サーバのポートを指定します。[[ref:lib:socket#service_format]]を参照を参照して下さい。
: :MaxClients
  クライアントの最大接続数を表す整数です。
: :ServerType
  サーバのタイプを表すクラスを指定します。指定するクラスはブロックを取るstartという名前のクラスメソッドを持つ必要があります。サーバは、startメソッドの中でクライアントからの応答待ちのループ処理を実行します。WEBrickは呼ばれたスレッド内で実行する[[c:WEBrick::SimpleServer]] と、子プロセスをforkしてデーモンとして実行する[[c:WEBrick::Daemon]] を提供します。また、[[c:Thread]]を指定するとサーバはスレッド内で実行されるため[[m:WEBrick::GenericServer#start]]は呼び出し直後に呼び出し元に制御を戻します。
: :Logger
  ログをとるオブジェクト(Logger オブジェクト)を指定します。通常は [[c:WEBrick::Log]] のインスタンスを指定します。
  WEBrick::Log.new(log_file, level) のように出力先とログレベルを設定することができます。
  Logger オブジェクトに定義されているべきメソッドに関しては [[c:WEBrick::Log]] を参照して下さい。
: :ServerSoftware
  サーバソフトウェア名を文字列で指定します。[[c:WEBrick::HTTPServer]] では Server ヘッダにこの値が出力されます。
: :DoNotListen
  true の場合、GenericServer オブジェクトを生成しただけでは listen を開始しません。
: :StartCallback
  start 開始時に呼ばれる [[c:Proc]] オブジェクト。呼ばれる時に引数は
  特に与えられません。
: :StopCallback
  サーバを stop した時に呼ばれる [[c:Proc]] オブジェクトを指定します。呼ばれる時に引数は
  特に与えられません。
: :AcceptCallback
  クライアントからの接続を accept したときに呼ばれる [[c:Proc]] オブジェクトを指定します。
  クライアントと接続された [[c:TCPSocket]] オブジェクトを引数として呼ばれます。
: :DoNotReverseLookup
  true の場合、ホスト名への逆引きを行わなくなります。
  [[m:BasicSocket#do_not_reverse_lookup]]
  も参照して下さい。

@param default サーバのデフォルトの設定を保存したハッシュを指定します。指定された config で
               設定がなかった項目に関してはこの default の値が使われます。

@see [[m:WEBrick::Config::General]]

