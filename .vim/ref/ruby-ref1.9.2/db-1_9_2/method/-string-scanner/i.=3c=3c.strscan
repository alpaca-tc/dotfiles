kind=defined
names=<<,concat
visibility=public

--- <<(str) -> self
--- concat(str) -> self

操作対象の文字列に対し str を破壊的に連結します。
マッチ記録は変更されません。

selfを返します。

@param str 操作対象の文字列に対し str を破壊的に連結します。

使用例
      s = StringScanner.new('test') # => #<StringScanner 0/4 @ "test">
      s.match(/\w(\w*)/)            # => "test"
      s[0]                          # => "test"
      s[1]                          # => "est"
      s << ' string'                # => #<StringScanner 4/11 "test" @ " stri...">
      s[0]                          # => "test"
      s[1]                          # => "est"
      s.match(/\s+/)                # => " "
      s.match(/\w+/)                # => "string"

この操作は StringScanner.new に渡した文字列にも影響することがあります。

      str = 'test'
      s = StringScanner.new(str) # => #<StringScanner 0/4 @ "test">
      s << ' string'             # => #<StringScanner 0/11 @ "test ...">
      str                        # => "test string"

