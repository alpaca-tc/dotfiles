set runtimepath^=$HOME/.vim
source $HOME/.vim/vimrc
set termguicolors
set clipboard=unnamedplus

let g:python_host_prog = $HOME . '/.pyenv/versions/2.7.12/bin/python'
let g:python3_host_prog = $HOME . '/.pyenv/versions/3.5.2/bin/python'
set runtimepath+=/usr/local/share/nvim/runtime
set runtimepath+=$HOME/.vim

nnoremap <Space><Space>s :<C-U>source ~/.vim/nvimrc<CR>

" deoplete
let g:deoplete#enable_at_startup = 1
if dein#tap('deoplete.nvim') " {{{
  function! s:deoplete_on_source() abort
    imap <expr><C-G> deoplete#undo_completion()

    function! s:my_cr_function()
      return pumvisible() ? deoplete#close_popup() . "\<CR>"  : "\<CR>\<Plug>DiscretionaryEnd"
    endfunction
    imap <expr><silent> <CR> <SID>my_cr_function()

    inoremap <expr><C-h> deoplete#smart_close_popup() . "\<C-h>"
    inoremap <expr><C-X><C-F> deoplete#manual_complete(['file'])
    inoremap <expr><C-X><C-K> deoplete#manual_complete('dictionary')
    inoremap <expr><C-X><C-I> deoplete#manual_complete('file/include')
    inoremap <expr><C-G> deoplete#undo_completion()
    inoremap <expr><C-N> pumvisible() ? "\<C-N>" : "\<C-X>\<C-U>\<C-P>\<Down>"
    inoremap <expr><C-P> pumvisible() ? "\<C-P>" : "\<C-P>\<C-N>"

    inoremap <expr><Left>  deoplete#close_popup() . "\<Left>"
    inoremap <expr><Right> deoplete#close_popup() . "\<Right>"
    inoremap <expr><Up>    deoplete#close_popup() . "\<Up>"
    inoremap <expr><Down>  deoplete#close_popup() . "\<Down>"

    imap <expr><TAB> pumvisible() ? "\<C-n>" :
          \ neosnippet#expandable_or_jumpable() ?
          \ neosnippet#mappings#jump_or_expand_impl() :
          \ <SID>check_back_space() ? "\<TAB>" :
          \ deoplete#manual_complete()
    function! s:check_back_space() "{{{
      let col = col('.') - 1
      return !col || getline('.')[col - 1]  =~ '\s'
    endfunction"}}}
  endfunction

  let g:deoplete#sources = {}
  let g:deoplete#sources._ = ['buffer', 'member', 'tag', 'file', 'dictionary', 'neosnippet']
  let g:deoplete#ignore_sources = {
    '_': ['omni']
  }

  execute 'autocmd MyDeinCmd User' 'dein#source#' . g:dein#name 'call s:deoplete_on_source()'
  execute 'autocmd MyDeinCmd User' 'dein#source#' . g:dein#name 'call s:deoplete_on_post_source()'
endif " }}}
