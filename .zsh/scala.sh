# Bash Scala completion
#
# Add this file to /etc/bash_completion.d/ (or your local equivalent)
# or place a line like this in your .bashrc or .profile:
#
#   .  /path/to/file/scala_completion.sh
#
# For more information, see:
#
#   http://bash-completion.alioth.debian.org/
#
# This file is generated by running scala.tools.util.BashCompletion.
#

_scala_completion_base ()
{
  cat <<EOM
-Dproperty=value
-J<flag>
-P
-X
-Xassem-extdirs
-Xassem-name
-Xassem-path
-Xcheck-null
-Xcheckinit
-Xdisable-assertions
-Xelide-below
-Xexperimental
-Xfatal-warnings
-Xfuture
-Xgenerate-phase-graph
-Xlint
-Xlog-implicits
-Xmax-classfile-name
-Xmigration
-Xno-forwarders
-Xno-uescape
-Xnojline
-Xplugin
-Xplugin-disable
-Xplugin-list
-Xplugin-require
-Xpluginsdir
-Xprint-icode
-Xprint-pos
-Xprint-types
-Xprint:
-Xprompt
-Xresident
-Xscript
-Xshow-class
-Xshow-object
-Xshow-phases
-Xsource-reader
-Xsourcedir
-Xverify
-Y
-Ybrowse:
-Ybuild-manager-debug
-Ybuilder-debug:none
-Ybuilder-debug:refined
-Ybuilder-debug:simple
-Ycheck:
-Yclosure-elim
-Ycompact-trees
-Ycompletion-debug
-Ydead-code
-Ydebug
-Ydependent-method-types
-Ydoc-debug
-Ygen-javap
-Yide-debug
-Yinfer-argument-types
-Yinfer-debug
-Yinline
-Ylinearizer:dfs
-Ylinearizer:dump
-Ylinearizer:normal
-Ylinearizer:rpo
-Ylog-classpath
-Ylog:
-Yno-completion
-Yno-generic-signatures
-Yno-imports
-Yno-self-type-checks
-Yno-squeeze
-Ynotnull
-Ypmat-debug
-Ypmat-naive
-Ypresentation-debug
-Ypresentation-delay
-Ypresentation-log
-Ypresentation-replay
-Ypresentation-verbose
-Yprofile-class
-Yprofile-memory
-Yprofile:
-Yrangepos
-Yrecursion
-Yrepl-debug
-Yrepl-sync
-Yresolve-term-conflict:error
-Yresolve-term-conflict:object
-Yresolve-term-conflict:package
-Yrich-exceptions
-Yself-in-annots
-Yshow-syms
-Yshow-trees
-Yshow:
-Yskip:
-Ystatistics
-Ystop-after:
-Ystop-before:
-Ystruct-dispatch:invoke-dynamic
-Ystruct-dispatch:mono-cache
-Ystruct-dispatch:no-cache
-Ystruct-dispatch:poly-cache
-Ytyper-debug
-Ywarn-all
-Ywarn-dead-code
-Ywarn-inaccessible
-Ywarn-nullary-override
-Ywarn-nullary-unit
-Ywarn-numeric-widen
-Ywarn-value-discard
-bootclasspath
-classpath
-d
-dependencyfile
-deprecation
-encoding
-explaintypes
-extdirs
-g:line
-g:none
-g:notailcalls
-g:source
-g:vars
-help
-javabootclasspath
-javaextdirs
-make:all
-make:changed
-make:immediate
-make:transitive
-make:transitivenocp
-no-specialization
-nobootcp
-nowarn
-optimise
-print
-sourcepath
-target:jvm-1.5
-target:msil
-toolcp
-unchecked
-uniqid
-usejavacp
-verbose
-version
@<file>
EOM
}

_scala_completion_phaseNames ()
{
  cat <<EOM
all
parser
namer
packageobjects
typer
superaccessors
pickler
refchecks
selectiveanf
liftcode
selectivecps
uncurry
tailcalls
specialize
explicitouter
erasure
lazyvals
lambdalift
constructors
flatten
mixin
cleanup
icode
inliner
closelim
dce
jvm
terminal
EOM
}

_scala_completion_phaseSettings ()
{
  cat <<EOM
-Yprofile
-Ystop-after
-Yskip
-Yshow
-Ystop-before
-Ybrowse
-Ylog
-Ycheck
-Xprint
EOM
}

_scala_completion_expanded_phaseSettings ()
{
  for s in $(_scala_completion_phaseSettings); do
    for n in $(_scala_completion_phaseNames); do
      echo "$s:$n"
    done
  done | sort
}

_scala_completion()
{
  local extra cur opts

  case "$1" in
         fsc) extra="-ipv4
-max-idle
-reset
-server
-shutdown" ;;
       scala) extra="-e
-howtorun:guess
-howtorun:jar
-howtorun:object
-howtorun:script
-i
-nc
-save" ;;
    scaladoc) extra="-Yuse-stupid-types
-doc-format:html
-doc-generator
-doc-no-compile
-doc-source-url
-doc-title
-doc-version" ;;
  esac

  COMPREPLY=()
  # without dropping the :here as well,
  # completion goes wonky on -Xprint:<tab>
  COMP_WORDBREAKS=${COMP_WORDBREAKS//:}
  _get_comp_words_by_ref -n : cur prev cword

  if [[ "$cur" == *:* ]] && _scala_completion_phaseSettings | grep -q -- "${cur%%:*}" -; then
    opts=$(_scala_completion_expanded_phaseSettings)
  elif [[ -z "$cur" ]]; then  # shorten on empty
    opts="$(_scala_completion_base | grep -v ':')"
  else
    opts="$(_scala_completion_base)"
  fi

  opts="$opts $extra"
  COMPREPLY=( $(compgen -W "$opts" -- $cur) )

  return 0
} && \
complete -o default -F _scala_completion scala scalac fsc scaladoc
