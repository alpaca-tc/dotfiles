[user]
  email= alprhcp666@gmail.com
  name= Hiroyuki Ishii

[core]
  excludesfile = ~/.gitignore_global
  ; autocrlf     = true ; input false
  trailing-space = false
  space-before-tab = false
  ; indent-with-non-tab =
  ; cr-at-eol =
  precomposeunicode = true
  quotepath = false

[receive]
  fsckObjects = true

[color]
  ui = true

[alias]
  assume = !"fun() { str=''; for arg in $@; do str=\"${str} $(find $arg -type f)\"; done; git update-index --assume-unchanged $str; }; fun"
  no-assume = !"fun() { str=''; for arg in $@; do str=\"${str} $(find $arg -type f)\"; done; git update-index --no-assume-unchanged $str; }; fun"
  assume-list = !"git ls-files -v | grep -e "^[a-z]""

  add-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; git add `f`"
  edit-unmerged = "!f() { git ls-files --unmerged | cut -f2 | sort -u ; }; vim `f`"

  append-gitkeep = "!find . -type d -empty -not -path './.git*' -exec touch {}\\/.gitkeep \\;"
  append-gitignore = !"f() { local s=$1; shift; while [ $# -gt 0 ]; do s="$s,$1"; shift; done; curl "http://gitignore.io/api/$s"; }; f"
  branch-note = "!git config branch.$(git symbolic-ref HEAD|sed \"s/refs\\/heads\\///\").note $( if [ $# -gt 0 ]; then $1; fi)"

  remove-branch-all = "!git checkout master && git pull origin master && git fetch -p origin && git branch -d $(git branch --merged | grep -v master | grep -v '*') && git push origin $(git branch -r --merged | grep origin/ | grep -v master | sed s~origin/~:~)"
  remove-branch-local = "!git branch -d $(git branch --merged | grep -v master | grep -v '*')"
  remove-branch-remote = "!git push origin $(git branch -r --merged | grep origin/ | grep -v master | sed s~origin/~:~)"

  zip-from = !"f(){ git archive --format=zip HEAD $(git diff --name-only HEAD $1) -o $2 ; }; f"

  resett = !git commit -a -m 'Temporary commit for cancel' && git reset --hard HEAD~
  dm = !git branch --merged | grep -v '*' | xargs -I % git branch -d %
  rs = reset
  sn = shortlog -sn
  st = !sh -c 'git ls-remote . | grep `git log -1 --grep="git-svn-id"`
  tr = log --graph --pretty='format:%C(yellow)%h%Creset %C(magenta)%cd%Creset %s %Cgreen(%an)%Creset %Cred%d%Creset' --date=iso
  empty-tree-sha1 = hash-object -t tree /dev/null
  forkdiff = !bash -c 'git diff $(git merge-base "$1" "$2") "$2" "${@: 3}" ' -

[push]
  default = tracking

[rerere]
  enabled = 1

[help]
  autocorrect = 1

[receive]
  denyDeleteCurrent = false
[difftool "sourcetree"]
  cmd = opendiff \"$LOCAL\" \"$REMOTE\"
  path =
[mergetool "sourcetree"]
  cmd = /Applications/SourceTree.app/Contents/Resources/opendiff-w.sh \"$LOCAL\" \"$REMOTE\" -ancestor \"$BASE\" -merge \"$MERGED\"
  trustExitCode = true
[issue]
  type = github
[branch]
  autosetuprebase = always
