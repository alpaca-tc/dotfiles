'\" t
.\"     Title: git-tar-tree
.\"    Author: [FIXME: author] [see http://docbook.sf.net/el/author]
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 03/26/2012
.\"    Manual: Git Manual
.\"    Source: Git 1.7.9.5
.\"  Language: English
.\"
.TH "GIT\-TAR\-TREE" "1" "03/26/2012" "Git 1\&.7\&.9\&.5" "Git Manual"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
git-tar-tree \- Create a tar archive of the files in the named tree object
.SH "SYNOPSIS"
.sp
.nf
\fIgit tar\-tree\fR [\-\-remote=<repo>] <tree\-ish> [ <base> ]
.fi
.sp
.SH "DESCRIPTION"
.sp
THIS COMMAND IS DEPRECATED\&. Use \fIgit archive\fR with \-\-format=tar option instead (and move the <base> argument to \-\-prefix=base/)\&.
.sp
Creates a tar archive containing the tree structure for the named tree\&. When <base> is specified it is added as a leading path to the files in the generated tar archive\&.
.sp
\fIgit tar\-tree\fR behaves differently when given a tree ID versus when given a commit ID or tag ID\&. In the first case the current time is used as modification time of each file in the archive\&. In the latter case the commit time as recorded in the referenced commit object is used instead\&. Additionally the commit ID is stored in a global extended pax header\&. It can be extracted using \fIgit get\-tar\-commit\-id\fR\&.
.SH "OPTIONS"
.PP
<tree\-ish>
.RS 4
The tree or commit to produce tar archive for\&. If it is the object name of a commit object\&.
.RE
.PP
<base>
.RS 4
Leading path to the files in the resulting tar archive\&.
.RE
.PP
\-\-remote=<repo>
.RS 4
Instead of making a tar archive from local repository, retrieve a tar archive from a remote repository\&.
.RE
.SH "CONFIGURATION"
.PP
tar\&.umask
.RS 4
This variable can be used to restrict the permission bits of tar archive entries\&. The default is 0002, which turns off the world write bit\&. The special value "user" indicates that the archiving user\(cqs umask will be used instead\&. See umask(2) for details\&.
.RE
.SH "EXAMPLES"
.PP
git tar\-tree HEAD junk | (cd /var/tmp/ && tar xf \-)
.RS 4
Create a tar archive that contains the contents of the latest commit on the current branch, and extracts it in
/var/tmp/junk
directory\&.
.RE
.PP
git tar\-tree v1\&.4\&.0 git\-1\&.4\&.0 | gzip >git\-1\&.4\&.0\&.tar\&.gz
.RS 4
Create a tarball for v1\&.4\&.0 release\&.
.RE
.PP
git tar\-tree v1\&.4\&.0^{tree} git\-1\&.4\&.0 | gzip >git\-1\&.4\&.0\&.tar\&.gz
.RS 4
Create a tarball for v1\&.4\&.0 release, but without a global extended pax header\&.
.RE
.PP
git tar\-tree \-\-remote=example\&.com:git\&.git v1\&.4\&.0 >git\-1\&.4\&.0\&.tar
.RS 4
Get a tarball v1\&.4\&.0 from example\&.com\&.
.RE
.PP
git tar\-tree HEAD:Documentation/ git\-docs > git\-1\&.4\&.0\-docs\&.tar
.RS 4
Put everything in the current head\(cqs Documentation/ directory into
\fIgit\-1\&.4\&.0\-docs\&.tar\fR, with the prefix
\fIgit\-docs/\fR\&.
.RE
.SH "GIT"
.sp
Part of the \fBgit\fR(1) suite
